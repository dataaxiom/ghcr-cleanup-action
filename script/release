#!/bin/bash

# About:
#
# This is a helper script to tag and push a new release. GitHub Actions use
# release tags to allow users to select a specific version of the action to use.
#
# See: https://github.com/actions/typescript-action#publishing-a-new-release
#
# This script will do the following:
#
# 1. Get the latest release tag
# 2. Prompt the user for a new release tag
# 3. Tag the new release
# 4. Push the new tag to the remote
#
# Usage:
#
# script/release

# Terminal colors.
OFF='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'

# Get the latest release tag.
latest_tag=$(git describe --tags "$(git rev-list --tags --max-count=1)")

if [[ -z "$latest_tag" ]]; then
	# There are no existing release tags
	echo -e "No tags found (yet) - Continue to create and push your first tag"
	latest_tag="[unknown]"
fi

# Display the latest release tag
echo -e "The latest release tag is: ${BLUE}${latest_tag}${OFF}"

# Prompt the user for the new release tag
read -r -p 'Enter a new release tag (vX.X.X format): ' new_tag

# Validate the new release tag
tag_regex='v([0-9]+)\.([0-9]+)\.([0-9]+)$'
if echo "$new_tag" | grep -q -E "$tag_regex"; then
	echo -e "Tag: ${BLUE}$new_tag${OFF} is valid"
else
	# Release tag is not `vX.X.X` format
	echo -e "Tag: ${BLUE}$new_tag${OFF} is ${RED}not valid${OFF} (must be in vX.X.X format)"
	exit 1
fi

# Extract major, minor, and patch number from the new release tag
if [[ $new_tag =~ $tag_regex ]]; then
	major=${BASH_REMATCH[1]}
	minor=${BASH_REMATCH[2]}
	patch=${BASH_REMATCH[3]}
else
	echo -e "Failed to extract major, minor, and patch number from the new release tag"
	exit 1
fi

# Delete previous tags of the form vX and vX.X, if they exist.
git tag -d "v$major" "v$major.$minor"

# Tag the new release.
git tag -a "v$major" -m "v$major"
echo -e "${GREEN}Tagged: v$major${OFF}"
git tag -a "v$major.$minor" -m "v$major.$minor"
echo -e "${GREEN}Tagged: v$major.$minor${OFF}"
git tag -a "v$major.$minor.$patch" -m "v$major.$minor.$patch"
echo -e "${GREEN}Tagged: v$major.$minor.$patch${OFF}"

# Push the new tag to the remote
git push origin :"v$major" "v$major" :"v$major.$minor" "v$major.$minor" :"v$major.$minor.$patch" "v$major.$minor.$patch"
echo -e "${GREEN}Release tag pushed to remote${OFF}"
echo -e "${GREEN}Done!${OFF}"
